#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FejlesztoKozpont")]
	public partial class FejlesztoKozpontDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertGyerekek(Gyerekek instance);
    partial void UpdateGyerekek(Gyerekek instance);
    partial void DeleteGyerekek(Gyerekek instance);
    partial void InsertTerapeutak(Terapeutak instance);
    partial void UpdateTerapeutak(Terapeutak instance);
    partial void DeleteTerapeutak(Terapeutak instance);
    #endregion
		
		public FejlesztoKozpontDataContext() : 
				base(global::DataLayer.Properties.Settings.Default.FejlesztoKozpontConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public FejlesztoKozpontDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FejlesztoKozpontDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FejlesztoKozpontDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FejlesztoKozpontDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Gyerekek> Gyerekeks
		{
			get
			{
				return this.GetTable<Gyerekek>();
			}
		}
		
		public System.Data.Linq.Table<Terapeutak> Terapeutaks
		{
			get
			{
				return this.GetTable<Terapeutak>();
			}
		}
		
		public System.Data.Linq.Table<AllGyerekData> AllGyerekDatas
		{
			get
			{
				return this.GetTable<AllGyerekData>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gyerekek")]
	public partial class Gyerekek : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GyerekID;
		
		private string _Name;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private System.Nullable<int> _TerapeutaID;
		
		private EntityRef<Terapeutak> _Terapeutak;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGyerekIDChanging(int value);
    partial void OnGyerekIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnBirthDayChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDayChanged();
    partial void OnTerapeutaIDChanging(System.Nullable<int> value);
    partial void OnTerapeutaIDChanged();
    #endregion
		
		public Gyerekek()
		{
			this._Terapeutak = default(EntityRef<Terapeutak>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GyerekID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int GyerekID
		{
			get
			{
				return this._GyerekID;
			}
			set
			{
				if ((this._GyerekID != value))
				{
					this.OnGyerekIDChanging(value);
					this.SendPropertyChanging();
					this._GyerekID = value;
					this.SendPropertyChanged("GyerekID");
					this.OnGyerekIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this.OnBirthDayChanging(value);
					this.SendPropertyChanging();
					this._BirthDay = value;
					this.SendPropertyChanged("BirthDay");
					this.OnBirthDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerapeutaID", DbType="Int")]
		public System.Nullable<int> TerapeutaID
		{
			get
			{
				return this._TerapeutaID;
			}
			set
			{
				if ((this._TerapeutaID != value))
				{
					if (this._Terapeutak.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTerapeutaIDChanging(value);
					this.SendPropertyChanging();
					this._TerapeutaID = value;
					this.SendPropertyChanged("TerapeutaID");
					this.OnTerapeutaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Terapeutak_Gyerekek", Storage="_Terapeutak", ThisKey="TerapeutaID", OtherKey="TerapeutaID", IsForeignKey=true)]
		public Terapeutak Terapeutak
		{
			get
			{
				return this._Terapeutak.Entity;
			}
			set
			{
				Terapeutak previousValue = this._Terapeutak.Entity;
				if (((previousValue != value) 
							|| (this._Terapeutak.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Terapeutak.Entity = null;
						previousValue.Gyerekeks.Remove(this);
					}
					this._Terapeutak.Entity = value;
					if ((value != null))
					{
						value.Gyerekeks.Add(this);
						this._TerapeutaID = value.TerapeutaID;
					}
					else
					{
						this._TerapeutaID = default(Nullable<int>);
					}
					this.SendPropertyChanged("Terapeutak");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Terapeutak")]
	public partial class Terapeutak : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TerapeutaID;
		
		private string _Name;
		
		private EntitySet<Gyerekek> _Gyerekeks;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTerapeutaIDChanging(int value);
    partial void OnTerapeutaIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public Terapeutak()
		{
			this._Gyerekeks = new EntitySet<Gyerekek>(new Action<Gyerekek>(this.attach_Gyerekeks), new Action<Gyerekek>(this.detach_Gyerekeks));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerapeutaID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TerapeutaID
		{
			get
			{
				return this._TerapeutaID;
			}
			set
			{
				if ((this._TerapeutaID != value))
				{
					this.OnTerapeutaIDChanging(value);
					this.SendPropertyChanging();
					this._TerapeutaID = value;
					this.SendPropertyChanged("TerapeutaID");
					this.OnTerapeutaIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Terapeutak_Gyerekek", Storage="_Gyerekeks", ThisKey="TerapeutaID", OtherKey="TerapeutaID")]
		public EntitySet<Gyerekek> Gyerekeks
		{
			get
			{
				return this._Gyerekeks;
			}
			set
			{
				this._Gyerekeks.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Gyerekeks(Gyerekek entity)
		{
			this.SendPropertyChanging();
			entity.Terapeutak = this;
		}
		
		private void detach_Gyerekeks(Gyerekek entity)
		{
			this.SendPropertyChanging();
			entity.Terapeutak = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AllGyerekData")]
	public partial class AllGyerekData
	{
		
		private int _GyerekID;
		
		private string _Name;
		
		private string _Address;
		
		private System.Nullable<System.DateTime> _BirthDay;
		
		private string _TerapeutaName;
		
		private int _TerapeutaID;
		
		public AllGyerekData()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GyerekID", DbType="Int NOT NULL")]
		public int GyerekID
		{
			get
			{
				return this._GyerekID;
			}
			set
			{
				if ((this._GyerekID != value))
				{
					this._GyerekID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDay", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDay
		{
			get
			{
				return this._BirthDay;
			}
			set
			{
				if ((this._BirthDay != value))
				{
					this._BirthDay = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerapeutaName", DbType="NVarChar(50)")]
		public string TerapeutaName
		{
			get
			{
				return this._TerapeutaName;
			}
			set
			{
				if ((this._TerapeutaName != value))
				{
					this._TerapeutaName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerapeutaID", DbType="Int NOT NULL")]
		public int TerapeutaID
		{
			get
			{
				return this._TerapeutaID;
			}
			set
			{
				if ((this._TerapeutaID != value))
				{
					this._TerapeutaID = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
